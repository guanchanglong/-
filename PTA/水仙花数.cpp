#define _CRT_SECURE_NO_DEPRECATE 0
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
int main(){
	//int n, m;
	//scanf("%d", &n);
	//	for (int x = 0; x<=9; x++){
	//		for (int y = 0; y <= 9; y++){
	//			for (int z = 0; z <= 9; z++){
	//				for (int j = 0; j <= 9; j++){
	//					for (int i = 0; i <= 9; i++){
	//						for (int k = 0; k <= 9; k++){
	//							for (int h = 0; h <= 9; h++){
	//									if (n == 3 && i * 100 + k * 10 + h == pow((double)i, (double)n) + pow((double)k, (double)n) + pow((double)h, (double)n)){
	//										if ((i * 100 + k * 10 + h)>=100)
	//											printf("%d\n", i * 100 + k * 10 + h);
	//									}
	//									else if (n == 4 && j * 1000 + i * 100 + k * 10 + h == pow((double)j, (double)n) + pow((double)i, (double)n) + pow((double)k, (double)n) + pow((double)h, (double)n)){
	//										if ((j * 1000 + i * 100 + k * 10 + h)>=1000)
	//											printf("%d\n", j * 1000 + i * 100 + k * 10 + h);
	//									}
	//									else if (n == 5 && z * 10000 + j * 1000 + i * 100 + k * 10 + h == pow((double)z, (double)n) + pow((double)j, (double)n) + pow((double)i, (double)n) + pow((double)k, (double)n) + pow((double)h, (double)n)){
	//										if ((z * 10000 + j * 1000 + i * 100 + k * 10 + h)>=10000)
	//											printf("%d\n", z * 10000 + j * 1000 + i * 100 + k * 10 + h);
	//									}
	//									else if (n == 6 && y * 100000 + z * 10000 + j * 1000 + i * 100 + k * 10 + h == pow((double)y, (double)n) + pow((double)z, (double)n) + pow((double)j, (double)n) + pow((double)i, (double)n) + pow((double)k, (double)n) + pow((double)h, (double)n)){
	//										if ((y * 100000 + z * 10000 + j * 1000 + i * 100 + k * 10 + h)>=100000)
	//											printf("%d\n", y * 100000 + z * 10000 + j * 1000 + i * 100 + k * 10 + h);
	//									}
	//									else if (n == 7 && x * 1000000 + y * 100000 + z * 10000 + j * 1000 + i * 100 + k * 10 + h == pow((double)x, (double)n) + pow((double)y, (double)n) + pow((double)z, (double)n) + pow((double)j, (double)n) + pow((double)i, (double)n) + pow((double)k, (double)n) + pow((double)h, (double)n)){
	//										if ((x * 1000000 + y * 100000 + z * 10000 + j * 1000 + i * 100 + k * 10 + h)>=1000000)
	//											printf("%d\n", x * 1000000 + y * 100000 + z * 10000 + j * 1000 + i * 100 + k * 10 + h);
	//									}
	//							}
	//						}
	//					}
	//					if (n == 3){
	//						scanf("%d", &m);
	//						exit(0);
	//					}
	//				}
	//				if (n == 4){
	//					scanf("%d", &m);
	//					exit(0);
	//				}
	//			}
	//			if (n == 5){
	//				scanf("%d", &m);
	//				exit(0);
	//			}
	//		}
	//		if (n == 6){
	//			scanf("%d", &m);
	//			exit(0);
	//		}
	//	}
	int n, i = 0, j = 1;
	scanf("%d", &n);
	if (n == 3){
		i = 100;
		j = 999;
	}
	if (n == 4){
		i = 1000;
		j = 9999;
	}
	if (n == 5){
		i = 10000;
		j = 99999;
	}
	if (n == 6){
		i = 100000;
		j = 999999;
	}
	if (n == 7){
		i = 1000000;
		j = 9999999;
	}
	for (; i <= j; i++){
		if (n == 3 && i == ((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10) + ((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10) + (i % 10)*(i % 10)*(i % 10)){
			printf("%d\n", i);
		}
		if (n == 4 && i == ((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10) + ((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10) + ((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10) + (i % 10)*(i % 10)*(i % 10)*(i % 10)){
			printf("%d\n", i);
		}
		if (n == 5 && i == ((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10) + ((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10) + ((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10) + ((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10) + (i % 10)*(i % 10)*(i % 10)*(i % 10)*(i % 10)){
			printf("%d\n", i);
		}
		if (n == 6 && i == ((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10) + ((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10) + ((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10) + ((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10) + ((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10) + (i % 10)*(i % 10)*(i % 10)*(i % 10)*(i % 10)*(i % 10)){
			printf("%d\n", i);
		}
		if (n == 7 && i == ((i / 1000000) % 10)*((i / 1000000) % 10)*((i / 1000000) % 10)*((i / 1000000) % 10)*((i / 1000000) % 10)*((i / 1000000) % 10)*((i / 1000000) % 10) + ((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10)*((i / 100000) % 10) + ((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10)*((i / 10000) % 10) + ((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10)*((i / 1000) % 10) + ((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10)*((i / 100) % 10) + ((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10)*((i / 10) % 10) + (i % 10)*(i % 10)*(i % 10)*(i % 10)*(i % 10)*(i % 10)*(i % 10)){
			printf("%d\n", i);
		}
	}
	system("pause");
	return 0;
}
//输出N位(3位-7位)水仙花数